#!/bin/sh

cache()
{
	name="/tmp/librune/rtype/$(basename "$1")"
	if test ! -f "$name"
	then
		mkdir -p /tmp/librune/rtype
		wget -q "$1" -O "$name"
	fi
}

cd "${0%/*}/.."

readonly URL1='https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt'
readonly URL2='https://www.unicode.org/Public/UCD/latest/ucd/DerivedCoreProperties.txt'
readonly URL3='https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-data.txt'
readonly URL4='https://www.unicode.org/Public/UCD/latest/ucd/DerivedNormalizationProps.txt'
readonly URL5='https://www.unicode.org/Public/UCD/latest/ucd/extracted/DerivedBinaryProperties.txt'

cache "$URL1" &
cache "$URL2" &
cache "$URL3" &
cache "$URL4" &
cache "$URL5" &
wait

props1='
Bidi_Control
Dash
Deprecated
Diacritic
Extender
Hex_Digit
ID_Compat_Math_Continue
ID_Compat_Math_Start
Ideographic
IDS_Binary_Operator
Logical_Order_Exception
Pattern_Syntax
Prepended_Concatenation_Mark
Quotation_Mark
Radical
Sentence_Terminal
Soft_Dotted
Terminal_Punctuation
Unified_Ideograph
Variation_Selector
White_Space
'

props2='
Alphabetic
Cased
Case_Ignorable
Changes_When_Casefolded
Changes_When_Casemapped
Changes_When_Lowercased
Changes_When_Titlecased
Changes_When_Uppercased
Default_Ignorable_Code_Point
Grapheme_Base
Grapheme_Extend
ID_Continue
ID_Start
Indic_Conjunct_Break
Lowercase
Math
Uppercase
XID_Continue
XID_Start
'

props3='
Emoji
Emoji_Component
Emoji_Modifier
Emoji_Modifier_Base
Emoji_Presentation
Extended_Pictographic
'

props4='
Changes_When_NFKC_Casefolded
'

props5='
Bidi_Mirrored
'

manual='
is_ASCII_Hex_Digit
is_IDS_Trinary_Operator
is_IDS_Unary_Operator
is_Join_Control
is_Noncharacter_Code_Point
is_Pattern_White_Space
is_Regional_Indicator
'

gen()
{
	local l=$(echo $1 | tr A-Z a-z)
	gawk -M -v prop=$1 -v word=$2 -f gen/rtype-prop.awk /tmp/librune/rtype/$3 \
		>lib/rtype/rprop_${2}_${l}.c
	printf 'DONE rprop_%s_%s()\n' $2 $l >&2
}

for prop in $props1
do
	gen $prop is PropList.txt &
done

for prop in $props2
do
	gen $prop is DerivedCoreProperties.txt &
done

for prop in $props3
do
	gen $prop is emoji-data.txt &
done

for prop in $props4
do
	gen $prop is DerivedNormalizationProps.txt &
done

for prop in $props5
do
	gen $prop is DerivedBinaryProperties.txt &
done

printf '[[unsequenced]] bool rprop_is_%s(rune);\n' \
	$(echo $props1 $props2 $props3 $props4 $props5 | tr A-Z a-z) \
| gawk '
	/PROP PREDICATES END/ { no = 0 }
	FILENAME != "-" && !no { print }
	FILENAME == "-" { funcs[++i] = $0 }

	/PROP PREDICATES START/ {
		no = 1
		asort(funcs)
		for (i = 1; i <= length(funcs); i++)
			print funcs[i]
	}
' - include/rtype.h | sponge include/rtype.h

wait
for prop in $manual
do
	lprop=$(echo $prop | tr A-Z a-z)
	printf 'Function rprop_%s() implemented manually\n' $lprop >&2
done
