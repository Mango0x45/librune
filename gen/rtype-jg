#!/bin/sh

cache()
{
	name="/tmp/librune/rtype/$(basename "$1")"
	if test ! -f "$name"
	then
		mkdir -p /tmp/librune/rtype
		wget -q "$1" -O "$name"
	fi
}

set -e
cd "${0%/*}/.."
exec >include/internal/rtype/jg.h

readonly URL='https://www.unicode.org/Public/UCD/latest/ucd/extracted/DerivedJoiningGroup.txt'
cache "$URL"

cat <<C
/* This file is autogenerated by gen/rtype-jg; DO NOT EDIT. */

#ifndef RUNE_INTERNAL_RTYPE_JG_H
#define RUNE_INTERNAL_RTYPE_JG_H

/* IWYU pragma: private */
/* clang-format off */

#include "../types.h"
#include "../../rtype.h"

static const struct {
	rune lo, hi;
	rprop_jg_bf val;
} rtype_jg_tbl[] = {
C

gawk '
BEGIN {
	FS = "( *#.*| +; +)"
}

/^[^#]/ {
	n = split($1, a, /\.\./)
	lo = strtonum("0X" a[1])
	hi = strtonum("0X" a[n])

	for (i = lo; i <= hi; i++)
		props[i] = toupper($2)
}

END {
	for (i = 0; i <= 0x10FFFF; i++) {
		if (!props[i])
			continue
		lo = i
		while (props[lo] == props[i + 1])
			i++
		printf "\t{0x%06X, 0x%06X, JG_%s},\n", lo, i, props[lo]
	}
}
' /tmp/librune/rtype/DerivedJoiningGroup.txt | sort

cat <<C
};

#endif /* !RUNE_INTERNAL_RTYPE_JG_H */
C
