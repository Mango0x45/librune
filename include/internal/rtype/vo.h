/* This file is autogenerated by gen/rtype-vo; DO NOT EDIT. */

#ifndef RUNE_INTERNAL_RTYPE_VO_H
#define RUNE_INTERNAL_RTYPE_VO_H

/* IWYU pragma: private */
/* clang-format off */

#include "../types.h"
#include "../../rtype.h"

static const vertical_orientation_bf rtype_vo_lat1_tbl[] = {
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_U,
	 VO_R,  VO_U,  VO_R,  VO_R,  VO_R,  VO_R,  VO_U,  VO_R,
	 VO_R,  VO_U,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_U,  VO_U,  VO_U,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_U,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_U,
	 VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,  VO_R,
};

/* This lookup table omits VO_R entries.  As VO_R is the default value, we can
   remove them from the lookup table for a dramatic decrease in size. */
static const struct {
	rune lo, hi;
	vertical_orientation_bf val;
} rtype_vo_tbl[] = {
	{0x0000A7, 0x0000A7, VO_U},
	{0x0000A9, 0x0000A9, VO_U},
	{0x0000AE, 0x0000AE, VO_U},
	{0x0000B1, 0x0000B1, VO_U},
	{0x0000BC, 0x0000BE, VO_U},
	{0x0000D7, 0x0000D7, VO_U},
	{0x0000F7, 0x0000F7, VO_U},
	{0x0002EA, 0x0002EB, VO_U},
	{0x001100, 0x0011FF, VO_U},
	{0x001401, 0x00167F, VO_U},
	{0x0018B0, 0x0018FF, VO_U},
	{0x002016, 0x002016, VO_U},
	{0x002020, 0x002021, VO_U},
	{0x002030, 0x002031, VO_U},
	{0x00203B, 0x00203C, VO_U},
	{0x002042, 0x002042, VO_U},
	{0x002047, 0x002049, VO_U},
	{0x002051, 0x002051, VO_U},
	{0x002065, 0x002065, VO_U},
	{0x0020DD, 0x0020E0, VO_U},
	{0x0020E2, 0x0020E4, VO_U},
	{0x002100, 0x002101, VO_U},
	{0x002103, 0x002109, VO_U},
	{0x00210F, 0x00210F, VO_U},
	{0x002113, 0x002114, VO_U},
	{0x002116, 0x002117, VO_U},
	{0x00211E, 0x002123, VO_U},
	{0x002125, 0x002125, VO_U},
	{0x002127, 0x002127, VO_U},
	{0x002129, 0x002129, VO_U},
	{0x00212E, 0x00212E, VO_U},
	{0x002135, 0x00213F, VO_U},
	{0x002145, 0x00214A, VO_U},
	{0x00214C, 0x00214D, VO_U},
	{0x00214F, 0x002189, VO_U},
	{0x00218C, 0x00218F, VO_U},
	{0x00221E, 0x00221E, VO_U},
	{0x002234, 0x002235, VO_U},
	{0x002300, 0x002307, VO_U},
	{0x00230C, 0x00231F, VO_U},
	{0x002324, 0x002328, VO_U},
	{0x002329, 0x00232A, VO_TR},
	{0x00232B, 0x00232B, VO_U},
	{0x00237D, 0x00239A, VO_U},
	{0x0023BE, 0x0023CD, VO_U},
	{0x0023CF, 0x0023CF, VO_U},
	{0x0023D1, 0x0023DB, VO_U},
	{0x0023E2, 0x002422, VO_U},
	{0x002424, 0x0024FF, VO_U},
	{0x0025A0, 0x002619, VO_U},
	{0x002620, 0x002767, VO_U},
	{0x002776, 0x002793, VO_U},
	{0x002B12, 0x002B2F, VO_U},
	{0x002B50, 0x002B59, VO_U},
	{0x002B97, 0x002B97, VO_U},
	{0x002BB8, 0x002BD1, VO_U},
	{0x002BD3, 0x002BEB, VO_U},
	{0x002BF0, 0x002BFF, VO_U},
	{0x002E50, 0x002E51, VO_U},
	{0x002E80, 0x003000, VO_U},
	{0x003001, 0x003002, VO_TU},
	{0x003003, 0x003007, VO_U},
	{0x003008, 0x003011, VO_TR},
	{0x003012, 0x003013, VO_U},
	{0x003014, 0x00301F, VO_TR},
	{0x003020, 0x00302F, VO_U},
	{0x003030, 0x003030, VO_TR},
	{0x003031, 0x003040, VO_U},
	{0x003041, 0x003041, VO_TU},
	{0x003042, 0x003042, VO_U},
	{0x003043, 0x003043, VO_TU},
	{0x003044, 0x003044, VO_U},
	{0x003045, 0x003045, VO_TU},
	{0x003046, 0x003046, VO_U},
	{0x003047, 0x003047, VO_TU},
	{0x003048, 0x003048, VO_U},
	{0x003049, 0x003049, VO_TU},
	{0x00304A, 0x003062, VO_U},
	{0x003063, 0x003063, VO_TU},
	{0x003064, 0x003082, VO_U},
	{0x003083, 0x003083, VO_TU},
	{0x003084, 0x003084, VO_U},
	{0x003085, 0x003085, VO_TU},
	{0x003086, 0x003086, VO_U},
	{0x003087, 0x003087, VO_TU},
	{0x003088, 0x00308D, VO_U},
	{0x00308E, 0x00308E, VO_TU},
	{0x00308F, 0x003094, VO_U},
	{0x003095, 0x003096, VO_TU},
	{0x003097, 0x00309A, VO_U},
	{0x00309B, 0x00309C, VO_TU},
	{0x00309D, 0x00309F, VO_U},
	{0x0030A0, 0x0030A0, VO_TR},
	{0x0030A1, 0x0030A1, VO_TU},
	{0x0030A2, 0x0030A2, VO_U},
	{0x0030A3, 0x0030A3, VO_TU},
	{0x0030A4, 0x0030A4, VO_U},
	{0x0030A5, 0x0030A5, VO_TU},
	{0x0030A6, 0x0030A6, VO_U},
	{0x0030A7, 0x0030A7, VO_TU},
	{0x0030A8, 0x0030A8, VO_U},
	{0x0030A9, 0x0030A9, VO_TU},
	{0x0030AA, 0x0030C2, VO_U},
	{0x0030C3, 0x0030C3, VO_TU},
	{0x0030C4, 0x0030E2, VO_U},
	{0x0030E3, 0x0030E3, VO_TU},
	{0x0030E4, 0x0030E4, VO_U},
	{0x0030E5, 0x0030E5, VO_TU},
	{0x0030E6, 0x0030E6, VO_U},
	{0x0030E7, 0x0030E7, VO_TU},
	{0x0030E8, 0x0030ED, VO_U},
	{0x0030EE, 0x0030EE, VO_TU},
	{0x0030EF, 0x0030F4, VO_U},
	{0x0030F5, 0x0030F6, VO_TU},
	{0x0030F7, 0x0030FB, VO_U},
	{0x0030FC, 0x0030FC, VO_TR},
	{0x0030FD, 0x003126, VO_U},
	{0x003127, 0x003127, VO_TU},
	{0x003128, 0x0031EF, VO_U},
	{0x0031F0, 0x0031FF, VO_TU},
	{0x003200, 0x0032FE, VO_U},
	{0x0032FF, 0x003357, VO_TU},
	{0x003358, 0x00337A, VO_U},
	{0x00337B, 0x00337F, VO_TU},
	{0x003380, 0x00A4CF, VO_U},
	{0x00A960, 0x00A97F, VO_U},
	{0x00AC00, 0x00D7FF, VO_U},
	{0x00E000, 0x00FAFF, VO_U},
	{0x00FE10, 0x00FE1F, VO_U},
	{0x00FE30, 0x00FE48, VO_U},
	{0x00FE50, 0x00FE52, VO_TU},
	{0x00FE53, 0x00FE57, VO_U},
	{0x00FE59, 0x00FE5E, VO_TR},
	{0x00FE5F, 0x00FE62, VO_U},
	{0x00FE67, 0x00FE6F, VO_U},
	{0x00FF01, 0x00FF01, VO_TU},
	{0x00FF02, 0x00FF07, VO_U},
	{0x00FF08, 0x00FF09, VO_TR},
	{0x00FF0A, 0x00FF0B, VO_U},
	{0x00FF0C, 0x00FF0C, VO_TU},
	{0x00FF0E, 0x00FF0E, VO_TU},
	{0x00FF0F, 0x00FF19, VO_U},
	{0x00FF1A, 0x00FF1B, VO_TR},
	{0x00FF1F, 0x00FF1F, VO_TU},
	{0x00FF20, 0x00FF3A, VO_U},
	{0x00FF3B, 0x00FF3B, VO_TR},
	{0x00FF3C, 0x00FF3C, VO_U},
	{0x00FF3D, 0x00FF3D, VO_TR},
	{0x00FF3E, 0x00FF3E, VO_U},
	{0x00FF3F, 0x00FF3F, VO_TR},
	{0x00FF40, 0x00FF5A, VO_U},
	{0x00FF5B, 0x00FF60, VO_TR},
	{0x00FFE0, 0x00FFE2, VO_U},
	{0x00FFE3, 0x00FFE3, VO_TR},
	{0x00FFE4, 0x00FFE7, VO_U},
	{0x00FFF0, 0x00FFF8, VO_U},
	{0x00FFFC, 0x00FFFD, VO_U},
	{0x010980, 0x01099F, VO_U},
	{0x011580, 0x0115FF, VO_U},
	{0x011A00, 0x011ABF, VO_U},
	{0x013000, 0x01345F, VO_U},
	{0x014400, 0x01467F, VO_U},
	{0x016FE0, 0x018D7F, VO_U},
	{0x01AFF0, 0x01B2FF, VO_U},
	{0x01CF00, 0x01CFCF, VO_U},
	{0x01D000, 0x01D1FF, VO_U},
	{0x01D2E0, 0x01D37F, VO_U},
	{0x01D800, 0x01DAAF, VO_U},
	{0x01F000, 0x01F1FF, VO_U},
	{0x01F200, 0x01F201, VO_TU},
	{0x01F202, 0x01F7FF, VO_U},
	{0x01F900, 0x01FAFF, VO_U},
	{0x020000, 0x02FFFD, VO_U},
	{0x030000, 0x03FFFD, VO_U},
	{0x0F0000, 0x0FFFFD, VO_U},
	{0x100000, 0x10FFFD, VO_U},
};

#endif /* !RUNE_INTERNAL_RTYPE_VO_H */
